#!/bin/bash

########################################################################
# Matthew's Git Bash Prompt
# Edited by Thomas Pabst
########################################################################

#source /usr/share/bash-completion/completions/git-prompt
source /usr/share/bash-completion/completions/git

source ${DOTFILES_FOLDER}/bash_color


function parse_git_branch {
  git rev-parse --git-dir &> /dev/null
  git_status="$(git status 2> /dev/null)"
  branch_pattern="^# On branch ([^${IFS}]*)"
  remote_pattern="# Your branch is (.*) of"
  diverge_pattern="# Your branch and (.*) have diverged"
  
  if [[ ! ${git_status}} =~ "working directory clean" ]]; then
    state="${RED}⚡"
  fi
  # add an else if or two here if you want to get more specific
  if [[ ${git_status} =~ ${remote_pattern} ]]; then
    if [[ ${BASH_REMATCH[1]} == "ahead" ]]; then
      remote="${COLOR_126}↑"
    else
      remote="${COLOR_228}↓"
    fi
  fi
  if [[ ${git_status} =~ ${diverge_pattern} ]]; then
    remote="${YELLOW}↕"
  fi
  if [[ ${git_status} =~ ${branch_pattern} ]]; then
    branch=${BASH_REMATCH[1]}
    echo " (${branch})${remote}${state}"
  fi
}

function git_dirty_flag {
  git status 2> /dev/null | grep -c : | awk '{if ($1 > 0) print "⚡"}'
}

function git_prompt_func() {
    previous_return_value=$?;
    #The lowercase w is the full current working directory
    #prompt="${TITLEBAR}${BLUE}[${RED}\w${GREEN}$(parse_git_branch)${BLUE}]${COLOR_NONE}"
    
    #Capital W is just the trailing part of the current working directory
    git_prompt="${TITLEBAR}${BOLD}${COLOR_130}[${COLOR_130} git branch -${COLOR_106}$(parse_git_branch)${COLOR_130}]${COLOR_NONE}"
    
    if test $previous_return_value -eq 0
    then
        PS1=$PS1"\n${git_prompt} "
    else
        PS1=$PS1"\n${git_prompt}${RED}>${COLOR_NONE} "
    fi
}

#PROMPT_COMMAND=git_prompt_func
